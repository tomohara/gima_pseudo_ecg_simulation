#include <math.h>
#include <stdio.h>
#include <iostream>
#include "LRddata.h"
#include "LRd.h"

using namespace std;

void LRd::rates()
{
alpha_m=0.32*(p->v+47.13)/(1.0-exp(-0.1*(p->v+47.13)));
beta_m=0.08*exp(-p->v/11.0);

if (p->v>=-40)
	{
	alpha_h=0;
	beta_h=1.0/(0.13*(1.0+exp((p->v+10.66)/-11.1)));
	alpha_j=0;
	beta_j=0.3*exp(-2.535e-7*p->v)/(1.0+exp(-0.1*(p->v+32.0)));
	}
else
	{
	alpha_h=0.135*exp((80.0+p->v)/-6.8);
	beta_h=3.56*exp(0.079*p->v)+3.1e5*exp(0.35*p->v);
	alpha_j=(-1.2714e5*exp(0.2444*p->v)-3.474e-5*exp(-0.04391*p->v))*(p->v+37.78)/(1.0+exp(0.311*(p->v+79.23)));
	beta_j=0.1212*exp(-0.01052*p->v)/(1.0+exp(-0.1378*(p->v+40.14)));
	}

az = (10*exp((p->v-40)/25.0))/(1+exp((p->v-40)/25.0));
bz = (10*exp(-(p->v+90)/25.0))/(1+exp(-(p->v+90)/25.0));
ay = 0.015/(1+exp((p->v+60)/5.0));
by = (0.1*exp((p->v+25)/5.0))/(1+exp((p->v+25)/5.0));

d_inf=1.0/(1.0+exp(-(p->v+10.0)/6.24));
tau_d=d_inf*(1.0-exp(-(p->v+10.0)/6.24))/(0.035*(p->v+10.0));
f_inf=1.0/(1.0+exp((p->v+32.0)/8.0))+0.6/(1.0+exp((50.0-p->v)/20.0));
b_inf=1.0/(1.0+exp(-(p->v+14.0)/10.8));
tau_b=3.7+6.1/(1.0+exp((p->v+25.0)/4.5));
g_inf=1.0/(1.0+exp((p->v+60.0)/5.6));
if (p->v<=0)
	{
	tau_g=-0.875*p->v+12.0;
	}
else
	{
	tau_g=12.0;
	}
tau_f=1.0/(0.0197*exp(-pow(0.0337*(p->v+10),2.0))+0.02);
Xr_inf=1.0/(1.0+exp(-(p->v+21.5)/7.5));
tau_Xr=1.0/(0.00138*(p->v+14.2)/(1.0-exp(-0.123*(p->v+14.2)))+0.00061*(p->v+38.9)/(exp(0.145*(p->v+38.9))-1.0));
Xs1_inf=1/(1+exp(-(p->v-1.5)/16.7));
Xs2_inf=Xs1_inf;
tau_Xs1=1/(7.19e-5*(p->v+30)/(1-exp(-0.148*(p->v+30)))+1.31e-4*(p->v+30)/(exp(0.0687*(p->v+30))-1));
tau_Xs2=4*tau_Xs1;
alpha_K1=1.02/(1.0+exp(0.2385*(p->v-EK1-59.215)));
beta_K1=(0.49124*exp(0.08032*(p->v-EK1+5.476))+exp(0.06175*(p->v-EK1-594.31)))/(1.0+exp(-0.5143*(p->v-EK1+4.753)));
}
